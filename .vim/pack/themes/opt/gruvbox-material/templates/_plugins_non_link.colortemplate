# vim: ft=colortemplate fdm=marker cc=22

# vim-plug{{{
plug1 orange none bold
plugNumber yellow none bold
#}}}
# Indent Guides {{{
#if get(g:, 'gruvbox_material_background', 'medium') ==# 'hard'
    #if get(g:, 'indent_guides_auto_colors', 0)
        #if get(g:, '@optionprefix_invert_indent_guides', 0)
            IndentGuidesOdd dark0_hard dark2 reverse
            IndentGuidesEven dark0_hard dark1 reverse
        #else
            IndentGuidesOdd dark0_hard dark2
            IndentGuidesEven dark0_hard dark1
        #endif
    #endif
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'soft'
    #if get(g:, 'indent_guides_auto_colors', 0)
        #if get(g:, '@optionprefix_invert_indent_guides', 0)
            IndentGuidesOdd dark0_soft dark2 reverse
            IndentGuidesEven dark0_soft dark1 reverse
        #else
            IndentGuidesOdd dark0_soft dark2
            IndentGuidesEven dark0_soft dark1
        #endif
    #endif
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'medium'
    #if get(g:, 'indent_guides_auto_colors', 0)
        #if get(g:, '@optionprefix_invert_indent_guides', 0)
            IndentGuidesOdd dark0_medium dark2 reverse
            IndentGuidesEven dark0_medium dark1 reverse
        #else
            IndentGuidesOdd dark0_medium dark2
            IndentGuidesEven dark0_medium dark1
        #endif
    #endif
#endif
# }}}
# IndentLine {{{
#if !exists('g:indentLine_color_term')
 #let g:indentLine_color_term = @term256dark2
#endif
#if !exists('g:indentLine_color_gui')
 #let g:indentLine_color_gui = '@guidark2'
#endif
# }}}
# Rainbow Parentheses {{{
verbatim
" Rainbow Parentheses
if !exists('g:rbpt_colorpairs')
 let g:rbpt_colorpairs = [['blue', '@guiblue'], ['magenta', '@guipurple'],
 \ ['red', '@guired'], ['@term256orange', '@guiorange']]
endif

let g:rainbow_guifgs = [ '@guiorange', '@guired', '@guipurple', '@guiblue' ]
let g:rainbow_ctermfgs = [ '@term256orange', 'red', 'magenta', 'blue' ]

if !exists('g:rainbow_conf')
 let g:rainbow_conf = {}
endif
if !has_key(g:rainbow_conf, 'guifgs')
 let g:rainbow_conf['guifgs'] = g:rainbow_guifgs
endif
if !has_key(g:rainbow_conf, 'ctermfgs')
 let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs
endif

let g:niji_dark_colours = g:rbpt_colorpairs
let g:niji_light_colours = g:rbpt_colorpairs
endverbatim
# }}}
# GitGutter {{{
#if get(g:, 'gruvbox_material_background', 'medium') ==# 'hard'
    GitGutterAdd green dark0_medium
    GitGutterChange blue dark0_medium
    GitGutterDelete red dark0_medium
    GitGutterChangeDelete purple dark0_medium
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'medium'
    GitGutterAdd green dark0_soft
    GitGutterChange blue dark0_soft
    GitGutterDelete red dark0_soft
    GitGutterChangeDelete purple dark0_soft
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'soft'
    GitGutterAdd green dark1
    GitGutterChange blue dark1
    GitGutterDelete red dark1
    GitGutterChangeDelete purple dark1
#endif
# }}}
# Signature {{{
#if get(g:, 'gruvbox_material_background', 'medium') ==# 'hard'
    SignatureMarkText blue dark0_medium
    SignatureMarkerText purple dark0_medium
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'medium'
    SignatureMarkText blue dark0_soft
    SignatureMarkerText purple dark0_soft
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'soft'
    SignatureMarkText blue dark1
    SignatureMarkerText purple dark1
#endif
# }}}
# ShowMarks {{{
#if get(g:, 'gruvbox_material_background', 'medium') ==# 'hard'
    ShowMarksHLl blue dark0_medium  
    ShowMarksHLu blue dark0_medium  
    ShowMarksHLo blue dark0_medium  
    ShowMarksHLm blue dark0_medium  
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'medium'
    ShowMarksHLl blue dark0_soft
    ShowMarksHLu blue dark0_soft
    ShowMarksHLo blue dark0_soft
    ShowMarksHLm blue dark0_soft
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'soft'
    ShowMarksHLl blue dark1
    ShowMarksHLu blue dark1
    ShowMarksHLo blue dark1
    ShowMarksHLm blue dark1
#endif
# }}}
# CtrlP {{{
CtrlPMatch green none bold
CtrlPPrtBase dark2 none
CtrlPLinePre dark2 none
CtrlPMode1 blue dark2 bold
CtrlPMode2 dark0_medium blue bold
CtrlPStats lightgrey dark2 bold
# }}}
# LeaderF {{{
Lf_hl_match green none bold
Lf_hl_match0 green none bold
Lf_hl_match1 aqua none bold
Lf_hl_match2 blue none bold
Lf_hl_match3 purple none bold
Lf_hl_match4 orange none bold
Lf_hl_matchRefine red none bold
#}}}
# Vimshell {{{
verbatim
let g:vimshell_escape_colors = [
 \ '@guidark4', '@guired', '@guigreen', '@guiyellow',
 \ '@guiblue', '@guipurple', '@guiaqua', '@guilightgrey',
 \ '@guidark0_medium', '@guired', '@guigreen', '@guiorange',
 \ '@guiblue', '@guipurple', '@guiaqua', '@guilight'
 \ ]
endverbatim
# }}}
# ALE {{{
ALEError none none t=underline g=undercurl s=red
ALEWarning none none t=underline g=undercurl s=yellow
ALEInfo none none t=underline g=undercurl s=blue
#if get(g:, 'gruvbox_material_background', 'medium') ==# 'hard'
    ALEErrorSign red dark0_medium
    ALEWarningSign yellow dark0_medium
    ALEInfoSign blue dark0_medium
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'medium'
    ALEErrorSign red dark0_soft
    ALEWarningSign yellow dark0_soft
    ALEInfoSign blue dark0_soft
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'soft'
    ALEErrorSign red dark1
    ALEWarningSign yellow dark1
    ALEInfoSign blue dark1
#endif
# }}}
# Vim Multiple Cursors {{{
multiple_cursors_cursor none none reverse
multiple_cursors_visual none dark2
# }}}
# CoC{{{
CocHighlightText none none bold
CocHoverRange none none bold,underline
#if get(g:, 'gruvbox_material_background', 'medium') ==# 'hard'
    CocHintSign aqua dark0_medium
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'medium'
    CocHintSign aqua dark0_soft
#elseif get(g:, 'gruvbox_material_background', 'medium') ==# 'soft'
    CocHintSign aqua dark1
#endif
#}}}
# vim-matchup{{{
MatchParenCur           none            none            bold
MatchWord               none            none            underline
MatchWordCur            none            none            underline
#}}}
# UndoTree {{{
UndotreeSavedBig purple none bold
#}}}
